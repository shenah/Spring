<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<!-- 오라클 접속 객체 만들기 -->
	<bean
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		id="dataSource">
		<property value="oracle.jdbc.driver.OracleDriver"
			name="driverClassName" />
		<property value="jdbc:oracle:thin:@192.168.10.101:1521:xe"
			name="url" />
		<property value="user03" name="username" />
		<property value="user03" name="password" />
	</bean>
	
	<!-- DB 접속정보만 가진 MyBatis 환경설정 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- Mapper 인터페이스 이용한 Dao 객체 만들어주는 bean -->
	<bean id="deptInterface" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="dao.DeptMapper"/>
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<!-- xml과 annotation을 동시에 사용하기 위한 설정 -->
	<context:annotation-config />

	<!-- annotation 설정된 클래스들의 bean을 자동으로 설정 -->
	<context:component-scan base-package="service"/>
	
	<!-- 트랜잭션 적용을 위한 transactionManager 객체 생성 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>	
	</bean>
	
	<!-- 트랜잭션 관련 annotation을 사용할 수 있도록 해주는 설정 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
</beans>
