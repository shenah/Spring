<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<default-servlet-handler />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="1" />
	</beans:bean>

	<!-- View 이름을 가지고 출력하는 뷰를 선택할 수 있도록 하는 설정 별도로 추가 -->
	<beans:bean
		class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0" />
	</beans:bean>

	<!--xml 파일로 변환할 클래스를 전달 -->
	<beans:bean id="marshaller"
		class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<beans:property name="classesToBeBound">
			<beans:list>
				<beans:value>com.shenah.view.domain.DataReport</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- id에는 Controller가 리턴한 뷰이름을 설정 -->
	<beans:bean id="dataxml"
		class="org.springframework.web.servlet.view.xml.MarshallingView">
		<beans:property name="marshaller" ref="marshaller" />
		<!-- 출력할 데이터의 attribute 이름 설정 -->
		<beans:property name="modelKey" value="dataReport" />
	</beans:bean>

	<!-- interceptor 추가 -->
	<beans:bean id="measuringInterceptor"
		class="com.shenah.view.interceptor.MeasuringInterceptor" />
	<interceptors>
		<interceptor>
			<mapping path="/interceptor" />
			<beans:ref bean="measuringInterceptor" />
		</interceptor>
	</interceptors>
	
	<!-- xml 파일을 이용한 AOP 설정  -->
	<!-- aspect 설정 - com.shenah.view.HomeController 메소드를 호출할 때 invoke 메소드를 호출 -->
	<!-- <aop:config>
		ref는 aspect 클래스 이름
		<aop:aspect id="traceAspect" ref="loggingAdvice">
			public * 패키지경로.클래스이름.메소드이름(매개변수)
			<aop:pointcut id="publicMethod"
				expression="execution(public * com.shenah.view.HomeController.*(..))" />
			<aop:around pointcut-ref="publicMethod" method="invoke" />
		</aop:aspect>
	</aop:config> -->
	
	
	<!-- annotation을 이용한 AOP -->
	<aop:aspectj-autoproxy />
	
	<!-- 파일 업로드를 위한 빈 -->
	<beans:bean id="multipartResolver"
	class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
	
	<context:component-scan
		base-package="com.shenah.view" />


</beans:beans>
